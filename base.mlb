local
	$(SML_LIB)/basis/basis.mlb
	$(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
	$(SML_LIB)/smlnj-lib/SExp/sexp-lib.mlb

	$(SML_LIB)/basis/mlton.mlb
in
	ann
		"allowOrPats true"
		"warnUnused true"
		"forceUsed"
		"nonexhaustiveBind warn"
		"nonexhaustiveMatch warn"
		"redundantBind warn"
		"redundantMatch warn"
		"sequenceNonUnit warn"
	in
		local
			lib/cont-mlton.sml
			lib/utils.sml

			lib/stringable.fun
			lib/intable.fun
			lib/floatable.fun
			lib/sexpable.fun
			lib/equable.fun
			lib/comparable.fun
			lib/monad.fun

			lib/exn.sig
			lib/exn.sml

			lib/either.sig
			lib/either.sml
			lib/result.sig
			lib/result.sml

			lib/container.fun

			lib/option.sig
			lib/option.sml
			lib/list.sig
			lib/list.sml
			lib/bool.sig
			lib/bool.sml
			lib/unit.sig
			lib/unit.sml
			lib/int.sig
			lib/int.sml

			lib/sexplib.sig
			lib/sexplib.sml

			lib/avl.sig
			lib/avl.sml
		in
			signature BAVL = BASE_AVL
			structure BAvl = BaseAvl

			signature BBOOL = BASE_BOOL
			structure BBool = BaseBool

			signature BCOMPARABLE = BASE_COMPARABLE
			functor BComparable_Make = BaseComparable_Make

			signature BCONTAINER = BASE_CONTAINER
			structure BContainer = BaseContainer

			structure BContinueOrStop = BaseContinueOrStop

			signature BEITHER = BASE_EITHER
			structure BEither = BaseEither

			signature BEXN = BASE_EXN
			structure BExn = BaseExn

			signature BINT = BASE_INT
			structure BInt = BaseInt

			signature BLIST = BASE_LIST
			structure BList = BaseList

			signature BOPTION = BASE_OPTION
			structure BOption = BaseOption

			signature BRESULT = BASE_RESULT
			structure BResult = BaseResult

			signature BSEXP_LIB = BASE_SEXP_LIB
			structure BSExpLib = BaseSExpLib

			signature BUNIT = BASE_UNIT
			structure BUnit = BaseUnit
		end
	end
end